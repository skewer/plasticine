#!/bin/bash

OUT_DIR=sim_out
if [ $# -lt 1 ]; then
  echo "Usage: $0 <Module>"
  exit -1
fi

MODULE=$1
#argsArray=( "$@" )

#sbtArgs=${argsArray[@]:0:$#}

# Create new output directory (and nuke the old one)
OUTDIR=${OUT_DIR}/${MODULE}
rm -rf ${OUTDIR}
mkdir -p ${OUTDIR}

# Generate binary
echo "Generating $MODULE.."
sbt "; run-main plasticine.${MODULE}Sim --testArgs --outdir $OUTDIR"

# Create a new "generated" header file that includes all generated header files
for f in generated*; do
  echo "#include \"$f\"" >> generated.h
done

# Move generated headers to OUTDIR
mv generated* ${OUTDIR}

# Copy 'src/main/scala/apps/$MODULE/Driver.cpp' to OUTDIR
cp -r static/fringeVCS/* ${OUTDIR}

echo "TOP=Top${MODULE}" > ${OUTDIR}/Makefile.common
